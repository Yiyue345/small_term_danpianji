C51 COMPILER V9.56.0.0   MAIN                                                              07/13/2025 23:57:08 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"
   2          #include "ls138.h"
   3          #include "smg.h"
   4          #include "delay.h"
   5          #include "iic.h"
   6          #include "keyboard.h"
   7          #include "ds1302.h"
   8          
   9          sbit  RST=P2^4;         
  10          sbit  CLK=P2^3;          
  11          sbit  DP=P2^2;           
  12          
  13          sbit L1 = P0^0;
  14          sbit L8 = P0^7;
  15          
  16          unsigned char second, minute, hour, key, choose = 0, flag = 0, timerMode = 0;
  17          // 定时器T0初始化
  18          void InitTimer0()
  19          {
  20   1        TMOD = 0x01;
  21   1        TH0 = (65535 - 50000) / 256;
  22   1        TL0 = (65535 - 50000) % 256;
  23   1        
  24   1        ET0 = 1;
  25   1        EA = 1;
  26   1        TR0 = 1;
  27   1      }
  28          
  29          void Init_smgled(){
  30   1      
  31   1      }
  32          
  33          
  34          void updatesmg(){
  35   1       
  36   1      }
  37          
  38          // 定时器T0中断服务函数
  39          unsigned char count = 0;
  40          void serviceTimer0() interrupt 1{
  41   1        TH0 = (65535 - 50000) / 256;
  42   1        TL0 = (65535 - 50000) % 256;
  43   1      
  44   1        count++;
  45   1        if(count % 20 == 0 && timerMode == 4) {
  46   2          // 先显示完整的时间，确保所有位置都有正确的数字
  47   2          syncBufTime();
  48   2          
  49   2          // 然后根据选择的位置进行闪烁
  50   2          if (flag == 0) {
  51   3            flag = 1;
  52   3            // 闪烁时将选中的位置设为空白（或关闭）
  53   3            if (choose == 0) {
  54   4              updateLed(0, 10);  // 10 对应空白
  55   4              updateLed(1, 10);
C51 COMPILER V9.56.0.0   MAIN                                                              07/13/2025 23:57:08 PAGE 2   

  56   4            }
  57   3            else if (choose == 1) {
  58   4              updateLed(3, 10);
  59   4              updateLed(4, 10);
  60   4            }
  61   3            else if (choose == 2) {
  62   4              updateLed(6, 10);
  63   4              updateLed(7, 10);
  64   4            }
  65   3          }
  66   2          else {
  67   3            flag = 0;
  68   3            // 恢复显示时，所有位置都会在syncBufTime()中被正确设置
  69   3            // 不需要额外操作，因为上面已经调用了syncBufTime()
  70   3          }
  71   2        }
  72   1        if(count == 100)
  73   1        {
  74   2          count = 0;
  75   2        }
  76   1      }
  77            
  78          
  79          void main() {
  80   1      
  81   1        // 初始化定时器
  82   1        InitTimer0();
  83   1        
  84   1        // // 初始化DS1302
  85   1        // Ds1302_Init();
  86   1        
  87   1        // // 延时一下让DS1302稳定
  88   1        // delay(100);
  89   1        
  90   1        // // 写入默认时间
  91   1        // Ds1302_Write_Time(); 
  92   1        
  93   1        // // 再次延时
  94   1        // delay(100);
  95   1      
  96   1        SelectHC573(1);
  97   1        Ds1302_Init();
  98   1      
  99   1        Ds1302_Write_Byte(0x8e, 0x00); // 禁止写保护
 100   1        // Ds1302_Write_Byte(0x80, 0x00); // 使能写操作
 101   1        // 写入默认时间
 102   1        Ds1302_Init_Time(); 
*** WARNING C206 IN LINE 102 OF main.c: 'Ds1302_Init_Time': missing function-prototype
 103   1        Ds1302_Write_Byte(0x8e, 0x80); // 启用写保护
 104   1        
 105   1        clearLed(); 
 106   1      
 107   1        
 108   1        while (1) {
 109   2          key = readKey(); // 扫描按键
 110   2      
 111   2          if (key == 7) {
 112   3            while (1) {
 113   4              // 读取当前时间
 114   4              Ds1302_Read_Time();
 115   4              
 116   4              // 显示时-分-秒 格式
C51 COMPILER V9.56.0.0   MAIN                                                              07/13/2025 23:57:08 PAGE 3   

 117   4              syncBufTime(); // 显示当前时间
 118   4              showLed(); 
 119   4              
 120   4              // 添加延时，避免读取过于频繁
 121   4              delayMs(1);
 122   4              key = readKey();
 123   4      
 124   4              if (key == 7) {
 125   5                clearLed();
 126   5                break;
 127   5              } 
 128   4              else if (key == 4) {
 129   5                timerMode = 4;
 130   5                // 进入设置时间模式
 131   5                clearLed();
 132   5                syncBufTime();
 133   5                while (1) {
 134   6                  // 在设置模式下，不要频繁调用showLed()
 135   6                  // 让中断函数来处理显示和闪烁
 136   6                  showLed();
 137   6      
 138   6                  key = readKey();
 139   6      
 140   6                  if (key == 7) {
 141   7                    clearLed();
 142   7                    timerMode = 0;
 143   7                    choose = 0;
 144   7                    Ds1302_Write_Time();
 145   7                    break;
 146   7                  } 
 147   6                  else if (key == 4) {
 148   7                    choose++;
 149   7                    choose %= 3;
 150   7                  }
 151   6                  else if (key == 11) {
 152   7                    // 进入设置秒
 153   7                    if (choose == 2) {
 154   8                      cur_time_buf[0]++;
 155   8                      if (cur_time_buf[0] >= 60) {
 156   9                        cur_time_buf[0] = 0;
 157   9                      }
 158   8                    } 
 159   7                    // 进入设置分
 160   7                    else if (choose == 1) {
 161   8                      cur_time_buf[1]++;
 162   8                      if (cur_time_buf[1] >= 60) {
 163   9                        cur_time_buf[1] = 0;
 164   9                      }
 165   8                    } 
 166   7                    // 进入设置时
 167   7                    else if (choose == 0) {
 168   8                      cur_time_buf[2]++;
 169   8                      if (cur_time_buf[2] >= 24) {
 170   9                        cur_time_buf[2] = 0;
 171   9                      }
 172   8                    }
 173   7                  }
 174   6      
 175   6                  else if (key == 10) {
 176   7                    // 进入设置秒
 177   7                    if (choose == 2) {
 178   8                      cur_time_buf[0]--;
C51 COMPILER V9.56.0.0   MAIN                                                              07/13/2025 23:57:08 PAGE 4   

 179   8                      if (cur_time_buf[0] < 0) {
 180   9                        cur_time_buf[0] = 59;
 181   9                      }
 182   8                    } 
 183   7                    // 进入设置分
 184   7                    else if (choose == 1) {
 185   8                      cur_time_buf[1]--;
 186   8                      if (cur_time_buf[1] < 0) {
 187   9                        cur_time_buf[1] = 59;
 188   9                      }
 189   8                    } 
 190   7                    // 进入设置时
 191   7                    else if (choose == 0) {
 192   8                      cur_time_buf[2]--;
 193   8                      if (cur_time_buf[2] < 0) {
 194   9                        cur_time_buf[2] = 23;
 195   9                      }
 196   8                    }
 197   7                  }
 198   6                  
 199   6                  showLed();
 200   6                }
 201   5              }
 202   4            }
 203   3          
 204   3      
 205   3          }
 206   2          
 207   2        }
 208   1        
 209   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    431    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      8    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
