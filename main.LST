C51 COMPILER V9.56.0.0   MAIN                                                              07/12/2025 19:44:49 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"
   2          #include "ls138.h"
   3          #include "smg.h"
   4          #include "delay.h"
   5          #include "iic.h"
   6          #include "keyboard.h"
   7          #include "ds1302.h"
   8          
   9          sbit  RST=P2^4;         
  10          sbit  CLK=P2^3;          
  11          sbit  DP=P2^2;           
  12          
  13          sbit L1 = P0^0;
  14          sbit L8 = P0^7;
  15          
  16          
  17          // 定时器T0初始化
  18          void InitTimer0()
  19          {
  20   1        TMOD = 0x01;
  21   1        TH0 = (65535 - 50000) / 256;
  22   1        TL0 = (65535 - 50000) % 256;
  23   1        
  24   1        ET0 = 1;
  25   1        EA = 1;
  26   1        TR0 = 1;
  27   1      }
  28          
  29          void Init_smgled(){
  30   1      
  31   1      }
  32          
  33          
  34          void updatesmg(){
  35   1       
  36   1      }
  37          
  38          // 定时器T0中断服务函数
  39          unsigned char count = 0;
  40          void serviceTimer0() interrupt 1{
  41   1        TH0 = (65535 - 50000) / 256;
  42   1        TL0 = (65535 - 50000) % 256;
  43   1        
  44   1        count++;
  45   1        if(count % 10 == 0)
  46   1        {
  47   2          L1 = ~L1;
  48   2        }
  49   1        if(count == 100)
  50   1        {
  51   2          L8 = ~L8;
  52   2          count = 0;
  53   2        }
  54   1      
  55   1      }
C51 COMPILER V9.56.0.0   MAIN                                                              07/12/2025 19:44:49 PAGE 2   

  56            
  57          unsigned char second, minute, hour;
  58          void main() {
  59   1      
  60   1        // // 初始化定时器
  61   1        // InitTimer0();
  62   1        
  63   1        // // 初始化DS1302
  64   1        // Ds1302_Init();
  65   1        
  66   1        // // 延时一下让DS1302稳定
  67   1        // delay(100);
  68   1        
  69   1        // // 写入默认时间
  70   1        // Ds1302_Write_Time(); 
  71   1        
  72   1        // // 再次延时
  73   1        // delay(100);
  74   1      
  75   1        SelectHC573(1);
  76   1        Ds1302_Init();
  77   1      
  78   1        Ds1302_Write_Byte(0x8e, 0x00); // 禁止写保护
  79   1        // Ds1302_Write_Byte(0x80, 0x00); // 使能写操作
  80   1        // 写入默认时间
  81   1        Ds1302_Init_Time(); 
*** WARNING C206 IN LINE 81 OF main.c: 'Ds1302_Init_Time': missing function-prototype
  82   1        Ds1302_Write_Byte(0x8e, 0x80); // 启用写保护
  83   1        
  84   1        
  85   1      
  86   1        
  87   1        while (1) {
  88   2          // 读取当前时间
  89   2          Ds1302_Read_Time();
  90   2          
  91   2          // 显示时-分-秒 格式
  92   2          updateLed(0, cur_time_buf[2] / 10);  // 时的十位
  93   2          updateLed(1, cur_time_buf[2] % 10);  // 时的个位
  94   2          updateLed(2, 11);                    // 分隔符 "-"
  95   2          updateLed(3, cur_time_buf[1] / 10);  // 分的十位
  96   2          updateLed(4, cur_time_buf[1] % 10);  // 分的个位
  97   2          updateLed(5, 11);                    // 分隔符 "-"
  98   2          updateLed(6, cur_time_buf[0] / 10);  // 秒的十位
  99   2          updateLed(7, cur_time_buf[0] % 10);  // 秒的个位
 100   2      
 101   2          // second = Ds1302_Read_Byte(0x81);
 102   2          // minute = Ds1302_Read_Byte(0x83);
 103   2          // hour = Ds1302_Read_Byte(0x85);
 104   2          
 105   2          // second = second / 16 * 10 + second % 16; 
 106   2          // minute = minute / 16 * 10 + minute % 16;
 107   2          // hour = hour / 16 * 10 + hour % 16;
 108   2              
 109   2          // updateLed(0, hour / 10);        // 时的十位
 110   2          // updateLed(1, hour % 10);        // 时的个位
 111   2          // updateLed(2, 11);               // 分隔符 "-"
 112   2          // updateLed(3, minute / 10);      // 分的十位
 113   2          // updateLed(4, minute % 10);      // 分的个位
 114   2          // updateLed(5, 11);               // 分隔符 "-"
 115   2              // updateLed(6, second / 10);  // 秒的十位
 116   2              // updateLed(7, second % 10);  // 秒的个位
C51 COMPILER V9.56.0.0   MAIN                                                              07/12/2025 19:44:49 PAGE 3   

 117   2      
 118   2      
 119   2          // updateLed(0, 2);
 120   2          // updateLed(1, 2);
 121   2      
 122   2          showLed();
 123   2          
 124   2          // 添加延时，避免读取过于频繁
 125   2          delayMs(1);
 126   2        }
 127   1        
 128   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    190    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
